<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="elevationImg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAMzSURBVDhPVVNpSFRhFL22yGjajDMFpQnBZBvUZFpq
        YlQEQxSFRmWWRlFZuZZm+mYy/9gyLVIUEVHRDyGoSI3649LqjDPaqIFJVGTqKCPNqmlKebrvPdsuHB7v
        e/ece+7hezQyMkImk4kMBgMJgkAlJ4roVHEBnb1yc931aovxrfleaeXtCv3RQiMVHi+WesTe8vJy8vv9
        RG63hzTKEPpdU4KmrwhKzHxI6U9/zhHeYOh1KhyPluL0oagnM8MUidwSIHdOJYfDQeT3eRU6/e58ZULG
        DVWKqTk4q2GcCjpAh+3QnnqLUWsG8HIFYEuC+2kSHpTH2AvTom7uTY4ucg4MhNDwkC9sUVmTlwreg44x
        MdcOyraBMq3QlrbjexMLPItlrAJeJAAWflrjMFi78Yfb7Y6gb4Ne1QLheTdlvQHlNMvkI4yDLHCyDd8t
        6UyOwXhDAiMe4/XxQEMsnI/1Lq7Z9G3Ip1pQ8qyHjrT8JR+2gg40QWucEGgQBWTyeF0cUB8DZ42eDbDA
        yKBXGVVU300HWIBti5NFMu1pQmRxK8bMqUxYAtTFMJYDtdHSe3/VetfXr+5Z5Hc5J68RHrRqSzuknUXb
        4mQtk9deeIcx+zHAvJmRIqORYdmMlsrtH7/0OhX0pWeATMK2az/s6RjlwETLIkZ5skjedrUdupIW6IzN
        0Bls0Ak2LDW0IWmXsbK36wORc8BFCbGLY13VbO8Vp837ShBt8+SFJRzsDjNoVyMo7TVopwW0vQ5z5i9f
        5+j+TOT1ekiliaD81Hl30bKaE5fTlnY2b5UmS+QMJjMC9rVDGX+waqYyiPr6+og8Hg+Fh0fQpEmT1TXn
        VnbClsjTRQF2xDuLtiltQmBvG8K2XOsKDAwMD1Mpqb+/XxaIjIyULqdyekhU7eW4T7DyZanjtDkwcWfa
        yQJMVqXccoSqNDqxV61W/3XwW0CsacHBc+8YoxvRyNfXmowlgh0B6a1QbzhjDwlVLpxo+19Ao9FMHP8p
        ReraGec6728cW5ZX85O0m67wWaj8SS6FQiH/TMPDw1RWVkZ5eXl/kJubS/szc6ji0vk1Fysu6/OzM6Wz
        f3vE39rn89EvZEASjxmE7/kAAAAASUVORK5CYII=
</value>
  </data>
</root>